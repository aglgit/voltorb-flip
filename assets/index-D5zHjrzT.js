(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function o(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(t){if(t.ep)return;t.ep=!0;const s=o(t);fetch(t.href,s)}})();class d{calculateRowSums(e){const o=Array(e[0].length).fill(0).map(()=>({sumValue:0,sumVoltorb:0})),r=Array(e[0].length).fill(0).map(()=>({sumValue:0,sumVoltorb:0}));for(let t=0;t<e.length;t++)for(let s=0;s<e[t].length;s++)r[t].sumValue+=e[t][s].value,o[s].sumValue+=e[t][s].value,e[t][s].isVoltorb&&(r[t].sumVoltorb++,o[s].sumVoltorb++);return console.log(r,o),[r,o]}calculateNum2s3s(e){let o=0;for(let r=0;r<e.length;r++)for(let t=0;t<e[r].length;t++)e[r][t].value>1&&o++;return o}}const m={1:[[5,0,6],[4,1,6],[3,1,6],[2,2,6],[0,3,6]],2:[[6,0,7],[5,1,7],[3,2,7],[1,3,7],[0,4,7]],3:[[7,0,8],[6,1,8],[4,2,8],[2,3,8],[1,4,8]],4:[[8,0,10],[5,2,10],[3,3,8],[2,4,10],[0,5,8]],5:[[9,0,10],[7,1,10],[6,2,10],[4,3,10],[1,5,10]],6:[[8,1,10],[5,3,10],[3,4,10],[2,5,10],[0,6,10]],7:[[9,1,13],[7,2,10],[6,3,10],[4,4,10],[1,6,13]],8:[[0,7,10],[8,2,10],[5,4,10],[2,6,10],[7,3,10]]},a=5;class f{constructor(e,o){this.boardGenerator=e,this.boardCalculator=o,this.grid=[],this.rowSums=[],this.colSums=[],this.level=1,this.gameOver=!1,this.totalCoins=0,this.coinsThisLevel=0,this.num2s3s=0;const r=m[this.level.toString()][Math.floor(Math.random()*5)];this.grid=this.boardGenerator.generateBoard(r,a),[this.rowSums,this.colSums]=this.boardCalculator.calculateRowSums(this.grid),this.num2s3s=this.boardCalculator.calculateNum2s3s(this.grid)}regenerateBoard(){this.gameOver=!1,this.coinsThisLevel=0,this.num2s3s=0;const e=m[this.level.toString()][Math.floor(Math.random()*5)];this.grid=this.boardGenerator.generateBoard(e,a),[this.rowSums,this.colSums]=this.boardCalculator.calculateRowSums(this.grid),this.num2s3s=this.boardCalculator.calculateNum2s3s(this.grid)}renderGame(){this.renderBoard(),this.renderInfo()}renderBoard(){const e=document.getElementById("game-board");e.innerHTML="";const o=this.grid,r=this.rowSums,t=this.colSums;for(let s=0;s<=a;s++)for(let l=0;l<=a;l++){const i=document.createElement("div");s==5&&l==5?i.className="empty-tile":s==5||l==5?this.createInfoTile(i,r,t,s,l):this.createGameTile(i,o,s,l),e==null||e.appendChild(i)}}createInfoTile(e,o,r,t,s){e.className="info-tile",t==5?e.textContent=`0${r[s].sumValue}
${r[s].sumVoltorb}`:s==5&&(e.textContent=`0${o[t].sumValue}
${o[t].sumVoltorb}`)}createGameTile(e,o,r,t){e.className="game-tile";const s=o[r][t];e.textContent=s.isRevealed?s.isVoltorb?"ðŸ’£":s.value.toString():"",e.addEventListener("click",()=>this.clickListener(r,t))}renderInfo(){const e=document.getElementById("info-level");e.textContent=`Level: 
${this.level}`;const o=document.getElementById("info-coins");o.textContent=`Total coins: 
${this.totalCoins}`;const r=document.getElementById("info-coins-level");r.textContent=`Coins this level: 
${this.coinsThisLevel}`}clickListener(e,o){this.gameOver?this.regenerateBoard():this.revealTile(e,o),this.renderGame()}revealTile(e,o){const r=this.grid[e][o];r.isRevealed=!0,r.isVoltorb?this.triggerGameOver():(r.value>1&&this.num2s3s--,this.coinsThisLevel=this.coinsThisLevel>0?this.coinsThisLevel*r.value:r.value),this.isGamecomplete()&&this.triggerGameComplete()}isGamecomplete(){return this.num2s3s===0}triggerGameOver(){this.gameOver=!0,alert("Game over!"),this.flipBoard(!0),this.level=this.level>1?this.level-1:1}triggerGameComplete(){this.gameOver=!0,alert("You won!"),this.flipBoard(!0),this.totalCoins+=this.coinsThisLevel,this.level++}flipBoard(e){this.grid.forEach(r=>{r.forEach(t=>{t.isRevealed=e})})}}class g{generateBoard(e,o){const[r,t,s]=e,l=o*o-r-t-s,i=[...this.createTileArray(s,0),...this.createTileArray(l,1),...this.createTileArray(r,2),...this.createTileArray(t,3)];for(let n=i.length-1;n>=0;n--){const h=Math.floor(Math.random()*(n+1));[i[n],i[h]]=[i[h],i[n]]}const u=[];for(let n=0;n<o;n++)u.push(i.slice(n*o,(n+1)*o));return console.log(u),u}createTileArray(e,o){return Array(e).fill(o).map(r=>this.createTile(r))}createTile(e){return{isVoltorb:e===0,value:e,isRevealed:!1}}}const v=new g,p=new d,y=new f(v,p);y.renderGame();
